package main

import (
	"fmt"
	"bytes"
	"go/format"
	"io/ioutil"
	"os"
)

type Generator struct {
	buf bytes.Buffer // accumulate the output
	//pkg *Package // package being scanned
}

func main() {	
	fmt.Printf("%v\n", os.Args)
	g := Generator{}
	g.Printf("// Code generated by hasgo.go")
	g.Printf("\n")
	ioutil.WriteFile("_hasgo.go", g.format(), 0644)
}

func (g *Generator) Printf(format string, args ...interface{}) {
	fmt.Fprintf(&g.buf, format, args)
}

// print the formatted source code
func (g *Generator) format() []byte {
	src, err := format.Source(g.buf.Bytes())
	if err != nil {
		// should never happen. During development, might.
		fmt.Println("Printing code without formatting")
		return g.buf.Bytes()
	}
	return src
}

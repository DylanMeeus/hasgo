// Code generated by hasgo.go [DO NOT EDIT]
package types

//===============Sum.go=============

func (s Ints) Sum() int64 {
	var sum int64
	for _, v := range s {
		sum += v
	}
	return sum
}

//===============Filter.go=============

func (s Ints) Filter(f func(int64) bool) (out Ints) {
	for _, v := range s {
		if f(v) {
			out = append(out, v)
		}
	}
	return
}

//===============Init.go=============

// Take n-1 elements from a slice, where n = len(list)
func (s Ints) Init() (out Ints) {
	slicecopy := append([]int64(nil), s...)
	return slicecopy[:len(s)-1]
}
